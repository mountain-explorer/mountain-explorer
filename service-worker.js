try{self["workbox:core:5.1.1"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.1"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,i="GET"){this.handler=s(t),this.match=e,this.method=i}}class n extends i{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const a=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class c{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:i,route:n}=this.findMatchingRoute({url:s,request:e,event:t});let a,c=n&&n.handler;if(!c&&this.s&&(c=this.s),c){try{a=c.handle({url:s,request:e,event:t,params:i})}catch(e){a=Promise.reject(e)}return a instanceof Promise&&this.i&&(a=a.catch(i=>this.i.handle({url:s,request:e,event:t}))),a}}findMatchingRoute({url:e,request:t,event:s}){const i=this.t.get(t.method)||[];for(const n of i){let i;const a=n.match({url:e,request:t,event:s});if(a)return i=a,(Array.isArray(a)&&0===a.length||a.constructor===Object&&0===Object.keys(a).length||"boolean"==typeof a)&&(i=void 0),{route:n,params:i}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new c,r.addFetchListener(),r.addCacheListener()),r);const f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=e=>[f.prefix,e,f.suffix].filter(e=>e&&e.length>0).join("-"),l=e=>e||u(f.precache),h=e=>e||u(f.runtime);function d(e){e.then(()=>{})}const w=new Set;class b{constructor(e,t,{onupgradeneeded:s,onversionchange:i}={}){this.o=null,this.u=e,this.l=t,this.h=s,this.p=i||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const i=indexedDB.open(this.u,this.l);i.onerror=()=>t(i.error),i.onupgradeneeded=e=>{s?(i.transaction.abort(),i.result.close()):"function"==typeof this.h&&this.h(e)},i.onsuccess=()=>{const t=i.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:i="next",count:n,includeKeys:a=!1}={}){return await this.transaction([e],"readonly",(c,r)=>{const o=c.objectStore(e),f=t?o.index(t):o,u=[],l=f.openCursor(s,i);l.onsuccess=()=>{const e=l.result;e?(u.push(a?e:e.value),n&&u.length>=n?r(u):e.continue()):r(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((i,n)=>{const a=this.o.transaction(e,t);a.onabort=()=>n(a.error),a.oncomplete=()=>i(),s(a,e=>i(e))})}async m(e,t,s,...i){return await this.transaction([t],s,(s,n)=>{const a=s.objectStore(t),c=a[e].apply(a,i);c.onsuccess=()=>n(c.result)})}close(){this.o&&(this.o.close(),this.o=null)}}b.prototype.OPEN_TIMEOUT=2e3;const p={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(p))for(const s of t)s in IDBObjectStore.prototype&&(b.prototype[s]=async function(t,...i){return await this.m(s,t,e,...i)});try{self["workbox:expiration:5.1.1"]&&_()}catch(e){}const m=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class y{constructor(e){this.g=e,this.o=new b("workbox-expiration",1,{onupgradeneeded:e=>this.v(e)})}v(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const i=indexedDB.deleteDatabase(e);i.onerror=()=>{s(i.error)},i.onblocked=()=>{s(new Error("Delete blocked"))},i.onsuccess=()=>{t()}})})(this.g)}async setTimestamp(e,t){const s={url:e=m(e),timestamp:t,cacheName:this.g,id:this._(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this._(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,i)=>{const n=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),a=[];let c=0;n.onsuccess=()=>{const s=n.result;if(s){const i=s.value;i.cacheName===this.g&&(e&&i.timestamp<e||t&&c>=t?a.push(s.value):c++),s.continue()}else i(a)}}),i=[];for(const e of s)await this.o.delete("cache-entries",e.id),i.push(e.url);return i}_(e){return this.g+"|"+m(e)}}class g{constructor(e,t={}){this.q=!1,this.R=!1,this.U=t.maxEntries,this.L=t.maxAgeSeconds,this.g=e,this.N=new y(e)}async expireEntries(){if(this.q)return void(this.R=!0);this.q=!0;const e=this.L?Date.now()-1e3*this.L:0,t=await this.N.expireEntries(e,this.U),s=await self.caches.open(this.g);for(const e of t)await s.delete(e);this.q=!1,this.R&&(this.R=!1,d(this.expireEntries()))}async updateTimestamp(e){await this.N.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.L){return await this.N.getTimestamp(e)<Date.now()-1e3*this.L}return!1}async delete(){this.R=!1,await this.N.expireEntries(1/0)}}const v=(e,t)=>e.filter(e=>t in e),x=async({request:e,mode:t,plugins:s=[]})=>{const i=v(s,"cacheKeyWillBeUsed");let n=e;for(const e of i)n=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:n}),"string"==typeof n&&(n=new Request(n));return n},q=async({cacheName:e,request:t,event:s,matchOptions:i,plugins:n=[]})=>{const a=await self.caches.open(e),c=await x({plugins:n,request:t,mode:"read"});let r=await a.match(c,i);for(const t of n)if("cachedResponseWillBeUsed"in t){const n=t.cachedResponseWillBeUsed;r=await n.call(t,{cacheName:e,event:s,matchOptions:i,cachedResponse:r,request:c})}return r},R=async({cacheName:e,request:s,response:i,event:n,plugins:c=[],matchOptions:r})=>{const o=await x({plugins:c,request:s,mode:"write"});if(!i)throw new t("cache-put-with-no-response",{url:a(o.url)});const f=await(async({request:e,response:t,event:s,plugins:i=[]})=>{let n=t,a=!1;for(const t of i)if("cacheWillUpdate"in t){a=!0;const i=t.cacheWillUpdate;if(n=await i.call(t,{request:e,response:n,event:s}),!n)break}return a||(n=n&&200===n.status?n:void 0),n||null})({event:n,plugins:c,response:i,request:o});if(!f)return;const u=await self.caches.open(e),l=v(c,"cacheDidUpdate"),h=l.length>0?await q({cacheName:e,matchOptions:r,request:o}):null;try{await u.put(o,f)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of w)await e()}(),e}for(const t of l)await t.cacheDidUpdate.call(t,{cacheName:e,event:n,oldResponse:h,newResponse:f,request:o})},U=q,L=async({request:e,fetchOptions:s,event:i,plugins:n=[]})=>{if("string"==typeof e&&(e=new Request(e)),i instanceof FetchEvent&&i.preloadResponse){const e=await i.preloadResponse;if(e)return e}const a=v(n,"fetchDidFail"),c=a.length>0?e.clone():null;try{for(const t of n)if("requestWillFetch"in t){const s=t.requestWillFetch,n=e.clone();e=await s.call(t,{request:n,event:i})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of n)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:i,request:r,response:t}));return t}catch(e){for(const t of a)await t.fetchDidFail.call(t,{error:e,event:i,originalRequest:c.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.1"]&&_()}catch(e){}const N={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let W;async function E(e,t){const s=e.clone(),i={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},n=t?t(i):i,a=function(){if(void 0===W){const e=new Response("");if("body"in e)try{new Response(e.body),W=!0}catch(e){W=!1}W=!1}return W}()?s.body:await s.blob();return new Response(a,n)}try{self["workbox:precaching:5.1.1"]&&_()}catch(e){}function O(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:i}=e;if(!i)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(i,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(i,location.href),a=new URL(i,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:a.href}}class D{constructor(e){this.g=l(e),this.W=new Map,this.O=new Map,this.D=new Map}addToCacheList(e){const s=[];for(const i of e){"string"==typeof i?s.push(i):i&&void 0===i.revision&&s.push(i.url);const{cacheKey:e,url:n}=O(i),a="string"!=typeof i&&i.revision?"reload":"default";if(this.W.has(n)&&this.W.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.W.get(n),secondEntry:e});if("string"!=typeof i&&i.integrity){if(this.D.has(e)&&this.D.get(e)!==i.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this.D.set(e,i.integrity)}if(this.W.set(n,e),this.O.set(n,a),s.length>0){const e="Workbox is precaching URLs without revision "+`info: ${s.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],i=[],n=await self.caches.open(this.g),a=await n.keys(),c=new Set(a.map(e=>e.url));for(const[e,t]of this.W)c.has(t)?i.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:i})=>{const n=this.D.get(s),a=this.O.get(i);return this.M({cacheKey:s,cacheMode:a,event:e,integrity:n,plugins:t,url:i})});return await Promise.all(r),{updatedURLs:s.map(e=>e.url),notUpdatedURLs:i}}async activate(){const e=await self.caches.open(this.g),t=await e.keys(),s=new Set(this.W.values()),i=[];for(const n of t)s.has(n.url)||(await e.delete(n),i.push(n.url));return{deletedURLs:i}}async M({cacheKey:e,url:s,cacheMode:i,event:n,plugins:a,integrity:c}){const r=new Request(s,{integrity:c,cache:i,credentials:"same-origin"});let o,f=await L({event:n,plugins:a,request:r});for(const e of a||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:n,request:r,response:f}):f.status<400))throw new t("bad-precaching-response",{url:s,status:f.status});f.redirected&&(f=await E(f)),await R({event:n,plugins:a,response:f,request:e===s?r:new Request(e),cacheName:this.g,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.W}getCachedURLs(){return[...this.W.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.W.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.g)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.g,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const i=this.createHandler(s),n=new Request(e);return()=>i({request:n})}}let M;const T=()=>(M||(M=new D),M);const K=(e,t)=>{const s=T().getURLsToCacheKeys();for(const i of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:i,urlManipulation:n}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const c=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(a,t);if(yield c.href,s&&c.pathname.endsWith("/")){const e=new URL(c.href);e.pathname+=s,yield e.href}if(i){const e=new URL(c.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:a});for(const t of e)yield t.href}}(e,t)){const e=s.get(i);if(e)return e}};let P=!1;function j(e){P||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:i}={})=>{const n=l();self.addEventListener("fetch",a=>{const c=K(a.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:i});if(!c)return;let r=self.caches.open(n).then(e=>e.match(c)).then(e=>e||fetch(c));a.respondWith(r)})})(e),P=!0)}const k=[],C={get:()=>k,add(e){k.push(...e)}},H=e=>{const t=T(),s=C.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},I=e=>{const t=T();e.waitUntil(t.activate())};var A;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),A={},function(e){T().addToCacheList(e),e.length>0&&(self.addEventListener("install",H),self.addEventListener("activate",I))}([{url:"_next/static/chunks/3bd381210953f33179459c8ba1f0e599fd3d473f.4a1964d7802e5b066283.js",revision:"07bb847de4bc1c54aeb5012dd76d5300"},{url:"_next/static/chunks/fe37ba57f1673c8c3d325193ef4503cda552fbb9.0eeb2a160fa166d95395.js",revision:"cfbcc8e0b38828b3b470713be4ef3d99"},{url:"_next/static/chunks/framework.4503cc20512dbab0b6d3.js",revision:"8dbfd54516c12914d3e0cd417cd67882"},{url:"_next/static/css/729eb3cf60c3fea9f35e.css",revision:"378688757ad775c9b61b121e893f8faa"},{url:"_next/static/media/roboto-latin-100.5cb7edfceb233100075dc9a1e12e8da3.woff",revision:"5cb7edfceb233100075dc9a1e12e8da3"},{url:"_next/static/media/roboto-latin-100.7370c3679472e9560965ff48a4399d0b.woff2",revision:"7370c3679472e9560965ff48a4399d0b"},{url:"_next/static/media/roboto-latin-100italic.f8b1df51ba843179fa1cc9b53d58127a.woff2",revision:"f8b1df51ba843179fa1cc9b53d58127a"},{url:"_next/static/media/roboto-latin-100italic.f9e8e590b4e0f1ff83469bb2a55b8488.woff",revision:"f9e8e590b4e0f1ff83469bb2a55b8488"},{url:"_next/static/media/roboto-latin-300.b00849e00f4c2331cddd8ffb44a6720b.woff",revision:"b00849e00f4c2331cddd8ffb44a6720b"},{url:"_next/static/media/roboto-latin-300.ef7c6637c68f269a882e73bcb57a7f6a.woff2",revision:"ef7c6637c68f269a882e73bcb57a7f6a"},{url:"_next/static/media/roboto-latin-300italic.14286f3ba79c6627433572dfa925202e.woff2",revision:"14286f3ba79c6627433572dfa925202e"},{url:"_next/static/media/roboto-latin-300italic.4df32891a5f2f98a363314f595482e08.woff",revision:"4df32891a5f2f98a363314f595482e08"},{url:"_next/static/media/roboto-latin-400.479970ffb74f2117317f9d24d9e317fe.woff2",revision:"479970ffb74f2117317f9d24d9e317fe"},{url:"_next/static/media/roboto-latin-400.60fa3c0614b8fb2f394fa29944c21540.woff",revision:"60fa3c0614b8fb2f394fa29944c21540"},{url:"_next/static/media/roboto-latin-400italic.51521a2a8da71e50d871ac6fd2187e87.woff2",revision:"51521a2a8da71e50d871ac6fd2187e87"},{url:"_next/static/media/roboto-latin-400italic.fe65b8335ee19dd944289f9ed3178c78.woff",revision:"fe65b8335ee19dd944289f9ed3178c78"},{url:"_next/static/media/roboto-latin-500.020c97dc8e0463259c2f9df929bb0c69.woff2",revision:"020c97dc8e0463259c2f9df929bb0c69"},{url:"_next/static/media/roboto-latin-500.87284894879f5b1c229cb49c8ff6decc.woff",revision:"87284894879f5b1c229cb49c8ff6decc"},{url:"_next/static/media/roboto-latin-500italic.288ad9c6e8b43cf02443a1f499bdf67e.woff",revision:"288ad9c6e8b43cf02443a1f499bdf67e"},{url:"_next/static/media/roboto-latin-500italic.db4a2a231f52e497c0191e8966b0ee58.woff2",revision:"db4a2a231f52e497c0191e8966b0ee58"},{url:"_next/static/media/roboto-latin-700.2735a3a69b509faf3577afd25bdf552e.woff2",revision:"2735a3a69b509faf3577afd25bdf552e"},{url:"_next/static/media/roboto-latin-700.adcde98f1d584de52060ad7b16373da3.woff",revision:"adcde98f1d584de52060ad7b16373da3"},{url:"_next/static/media/roboto-latin-700italic.81f57861ed4ac74741f5671e1dff2fd9.woff",revision:"81f57861ed4ac74741f5671e1dff2fd9"},{url:"_next/static/media/roboto-latin-700italic.da0e717829e033a69dec97f1e155ae42.woff2",revision:"da0e717829e033a69dec97f1e155ae42"},{url:"_next/static/media/roboto-latin-900.9b3766ef4a402ad3fdeef7501a456512.woff2",revision:"9b3766ef4a402ad3fdeef7501a456512"},{url:"_next/static/media/roboto-latin-900.bb1e4dc6333675d11ada2e857e7f95d7.woff",revision:"bb1e4dc6333675d11ada2e857e7f95d7"},{url:"_next/static/media/roboto-latin-900italic.28f9151055c950874d2c6803a39b425b.woff",revision:"28f9151055c950874d2c6803a39b425b"},{url:"_next/static/media/roboto-latin-900italic.ebf6d1640ccddb99fb49f73c052c55a8.woff2",revision:"ebf6d1640ccddb99fb49f73c052c55a8"},{url:"_next/static/runtime/main-d5ba4bb00efe93e3b356.js",revision:"21a695f99020f308e495091217912207"},{url:"_next/static/runtime/polyfills-1e5e3e1f64c0fdafa966.js",revision:"bea2fc3eb766d74667740ae469710193"},{url:"_next/static/runtime/webpack-b65cab0b00afd201cbda.js",revision:"f5e6e2fca3144cc944812cfa3547f475"},{url:"_next/static/uHV6OWDlpbUf9WiWzX7gb/_buildManifest.js",revision:"fb96ae7926f5104f50f0cf1b3a23a9b5"},{url:"_next/static/uHV6OWDlpbUf9WiWzX7gb/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/uHV6OWDlpbUf9WiWzX7gb/pages/_app.js",revision:"086584234dced97513aa609410369b1f"},{url:"_next/static/uHV6OWDlpbUf9WiWzX7gb/pages/_error.js",revision:"838564ce7b1d529f44e705febe42814e"},{url:"_next/static/uHV6OWDlpbUf9WiWzX7gb/pages/index.js",revision:"5cc5a8a067f995af59be0963db863185"}]),j(A),function(e,s,a){let c;if("string"==typeof e){const t=new URL(e,location.href);c=new i(({url:e})=>e.href===t.href,s,a)}else if(e instanceof RegExp)c=new n(e,s,a);else if("function"==typeof e)c=new i(e,s,a);else{if(!(e instanceof i))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});c=e}o().registerRoute(c)}(/^https?.*/,new class{constructor(e={}){if(this.g=h(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.T=t?e.plugins:[N,...e.plugins]}else this.T=[N];this.K=e.networkTimeoutSeconds||0,this.P=e.fetchOptions,this.j=e.matchOptions}async handle({event:e,request:s}){const i=[];"string"==typeof s&&(s=new Request(s));const n=[];let a;if(this.K){const{id:t,promise:c}=this.k({request:s,event:e,logs:i});a=t,n.push(c)}const c=this.C({timeoutId:a,request:s,event:e,logs:i});n.push(c);let r=await Promise.race(n);if(r||(r=await c),!r)throw new t("no-response",{url:s.url});return r}k({request:e,logs:t,event:s}){let i;return{promise:new Promise(t=>{i=setTimeout(async()=>{t(await this.H({request:e,event:s}))},1e3*this.K)}),id:i}}async C({timeoutId:e,request:t,logs:s,event:i}){let n,a;try{a=await L({request:t,event:i,fetchOptions:this.P,plugins:this.T})}catch(e){n=e}if(e&&clearTimeout(e),n||!a)a=await this.H({request:t,event:i});else{const e=a.clone(),s=R({cacheName:this.g,request:t,response:e,event:i,plugins:this.T});if(i)try{i.waitUntil(s)}catch(e){}}return a}H({event:e,request:t}){return U({cacheName:this.g,request:t,event:e,matchOptions:this.j,plugins:this.T})}}({cacheName:"offlineCache",plugins:[new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:i})=>{if(!i)return null;const n=this.I(i),a=this.A(s);d(a.expireEntries());const c=a.updateTimestamp(t.url);if(e)try{e.waitUntil(c)}catch(e){}return n?i:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.A(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.S=e,this.L=e.maxAgeSeconds,this.B=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),w.add(t))}A(e){if(e===h())throw new t("expire-custom-caches-only");let s=this.B.get(e);return s||(s=new g(e,this.S),this.B.set(e,s)),s}I(e){if(!this.L)return!0;const t=this.F(e);return null===t||t>=Date.now()-1e3*this.L}F(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.B)await self.caches.delete(e),await t.delete();this.B=new Map}}({maxEntries:200,purgeOnQuotaError:!0})]}),"GET");
